plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.boot'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//db
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	//OAuth 2.0
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.redisson:redisson-spring-boot-starter:3.27.0'
	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.2'
	//s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	// queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	//Jsoup
	implementation 'org.jsoup:jsoup:1.17.2'
	//Selenium
	implementation 'org.seleniumhq.selenium:selenium-java'
	implementation 'io.github.bonigarcia:webdrivermanager:5.9.2'
	//Redisson
	implementation 'org.redisson:redisson-spring-boot-starter:3.25.2'
	//Prometheus
	implementation "io.micrometer:micrometer-registry-prometheus"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
}

def generated = 'build/generated'

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(generated)
}

sourceSets {
	main.java.srcDirs += "$projectDir/build/generated"
}

clean {	delete file('build/generated')}

/*
tasks.named('test') {
	useJUnitPlatform()
}
 */
